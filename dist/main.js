(()=>{const t={TOGGLE_SELECT:"✅",REMOVE:"❌"};class e{constructor(){this.tasks=[]}#t(t){return this.tasks.indexOf(t)}#e(t){return t.replaceAll(" ","").toLowerCase()}#n(t){return this.tasks.some(e=>this.#e(e)===this.#e(t))}addTask(t){if(this.#n(t))throw Error("Cannot create same task.");this.tasks.push(t)}removeTask(t){const e=this.#t(t);if(e<0)return`${t} is not listed in Tasks`;this.tasks.splice(e,1)}getAllTasks(){return this.tasks}getLastChild(){return this.tasks[this.tasks.length-1]}filterTasks(t){return this.tasks.filter(e=>e.includes(t))}isNotEmpty(){return!!this.tasks.length}}class n{classes=["cursor-pointer"];constructor(t,e){this.actions=t,this.actionObject=e}createButtonElement(t,e=null,n=[]){const s=document.createElement("button");return e&&(s.id=e),n.length&&n.forEach(t=>{const[e,n]=t;s.dataSet[e]=n}),s.classList.add(...this.classes),s.innerText=t,s}getButtonActionElements(){const t=document.createElement("div");return this.actions.forEach(e=>{t.appendChild(this.createButtonElement(this.actionObject[e]))}),t}}class s extends HTMLElement{#s=new e;#i;#a;#l;constructor(){super(),this.attachShadow({mode:"open"}),this.inputElement=document.createElement("input"),this.addBtnElement=document.createElement("button"),this.inputCheckBoxElement=document.createElement("input"),this.ulElement=document.createElement("ul")}connectedCallback(){this.shadowRoot.innerHTML='<style>\n                                            \ninput[type="text"] {\n    all: unset;\n    padding: 12px;\n    border: 1px solid rgba(255,255,255,0.15);\n    border-radius: 0.5rem;\n    caret-color: rgba(255,255,255,0.5);\n    color: white;\n}\n\nsection#task-container {\n    display: flex;\n    gap: 6px;\n    align-items: center;\n}\n\nsection#task-container > div {\n    display: flex;\n    align-items: center;\n    gap: 6px;\n    color: white;\n    font-size: 1rem;\n}\n\nsection#task-container > button {\n    all: unset;\n    color: white;\n    cursor: pointer;\n    background-color: #1f8ed3;\n    padding: 12px;\n    border-radius: 0.25rem;\n}\n\nul#task-list{\n    list-style: none;\n    padding: 0;\n    width: 60vw;\n    display: flex;\n    flex-direction: column;\n    gap: 6px;\n}\nli {\n    padding: 12px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    gap: 12px;\n    background-color: #434f60;\n    color: white;\n    border-radius: 0.5rem;\n    font-size: 1.25rem;\n    /* border-bottom: 1px solid #ddd; */\n}\n\nli > div {\n    display: flex;\n    gap: 12px;\n}\n\nli > div > button {\n    all: unset;\n}\n\nlabel[for="filter-input"] {\n    color: white;\n    font-size: 1rem;\n}\n\n.cursor-pointer {\n    cursor: pointer;\n}\n                                        </style>\n                                        ',this.#r(),this.#o()}#d(e){const s=document.createElement("li"),i=new n(Object.keys(t),t);return s.append(e,i.getButtonActionElements()),s}#c(t){let e=0===t.length?this.#s.getAllTasks():t;const n=document.createDocumentFragment();e.forEach(t=>{const e=this.#d(t);n.appendChild(e)}),this.ulElement.innerHTML="",this.ulElement.append(n)}#h(){const t=this.#d(this.#s.getLastChild());this.ulElement.appendChild(t)}#m(){const t=this.inputElement.value.trim();if(!t)throw Error("Task is Empty");this.#s.addTask(t),this.#h(),this.inputElement.value=""}#u(t){const e=t.childNodes[0];let n;"S"!==e.tagName?(n=document.createElement("s"),n.innerText=e.nodeValue):n=document.createTextNode(e.innerText),t.replaceChild(n,t.childNodes[0])}#p(t){let e=t.childNodes[0];e=e.tagName&&"S"===e.tagName?e.innerText:e.nodeValue,this.#s.removeTask(e),t.remove()}#E(e){if("BUTTON"===e.target.tagName){const n=e.target.parentElement.parentElement;switch(e.target.innerText){case t.TOGGLE_SELECT:this.#u(n);break;case t.REMOVE:this.#p(n)}}}#k(t){const e=this.inputElement.value.trim();"Enter"===t.key&&e?this.#m():this.inputCheckBoxElement.checked&&this.#s.isNotEmpty()&&this.#c(this.#s.filterTasks(e))}#o(){this.#l=this.addBtnElement.addEventListener("click",this.#m.bind(this)),this.#a=this.ulElement.addEventListener("click",this.#E.bind(this)),this.#i=this.inputElement.addEventListener("keyup",this.#k.bind(this))}#r(){const t=document.createElement("section");t.id="task-container",this.inputElement.id="task-input",this.inputElement.placeholder="New Task...",this.inputElement.type="text",this.addBtnElement.id="btn-add-task",this.addBtnElement.innerHTML="Add Task",this.inputCheckBoxElement.type="checkbox",this.inputCheckBoxElement.id="filter-input",this.inputCheckBoxElement.name="filter-input";const e=document.createElement("label");e.setAttribute("for","filter-input"),e.innerText="Filter",t.append(this.inputElement,this.addBtnElement,this.inputCheckBoxElement,e),this.ulElement.id="task-list",this.shadowRoot.append(t,this.ulElement)}disconnectedCallback(){document.removeEventListener(this.#l),document.removeEventListener(this.#a),document.removeEventListener(this.#i)}}customElements.define("mir-todo-app",s)})();